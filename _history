{"entries":[{"timestamp":1738570730956,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"radio.setGroup(1)\nradio.setTransmitPower(7)\n"],[0,"\n"]],"start1":0,"start2":0,"length1":45,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":247,"start2":247,"length1":32,"length2":31}]}]},{"timestamp":1738570854599,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"7)\n\n"],[-1,"let avrglight: number = 0\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\ninput.onButtonPressed(Button.A, () => {\n    avrglight = lightCalibrate()\n})\n\navrglight = lightCalibrate();"]],"start1":41,"start2":41,"length1":382,"length2":4}]}]},{"timestamp":1738571880285,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"te()\n})\n"],[1,"\navrglight = lightCalibrate();"]],"start1":385,"start2":385,"length1":8,"length2":38}]}]},{"timestamp":1738571887859,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"radio.setGroup(1)\nradio.setTransmitPower(7)\n"],[0,"\nlet avrglig"]],"start1":0,"start2":0,"length1":12,"length2":56},{"diffs":[[0,"0\n}\n"],[-1,"avrglight = lightCalibrate()\nenum STATE{\n    ready,\n    running,\n    finish,\n}\nlet mode:STATE=STATE.ready\nif(mode===STATE.ready){\n\n}\nmode = STATE.running\nif(mode===STATE.running){\n\n}"],[1,"input.onButtonPressed(Button.A, () => {\n    avrglight = lightCalibrate()\n})\n"]],"start1":313,"start2":313,"length1":186,"length2":80}]}]},{"timestamp":1738572502885,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"dy){\n\n}\n"],[1,"mode = STATE.running\nif(mode===STATE.running){\n\n}"]],"start1":398,"start2":398,"length1":8,"length2":57}]}]},{"timestamp":1738572508674,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," / 10\n}\n"],[1,"avrglight = lightCalibrate()\n"],[0,"enum STA"]],"start1":265,"start2":265,"length1":16,"length2":45},{"diffs":[[0,"y){\n"],[-1,"    avrglight = lightCalibrate()\n    if (avrglight < avrglight - 20) {\n        basic.showLeds(`\n        # . . . #\n        . # . # .\n        . . # . .\n        . # . # .\n        # . . . #\n        `\n\n        ); }"],[0,"\n}\n"]],"start1":399,"start2":399,"length1":216,"length2":7}]}]},{"timestamp":1738573107140,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"\nradio.setGroup(37)\nradio.setTransmitPower(3)"],[0,"\nlet"]],"start1":0,"start2":0,"length1":49,"length2":4},{"diffs":[[0,"eady"],[-1," as STATE"],[0,"\nif("]],"start1":345,"start2":345,"length1":17,"length2":8},{"diffs":[[0,"    if ("],[1,"avrg"],[0,"light"],[-1,"Calibrate()"],[0," < avrgl"]],"start1":407,"start2":407,"length1":32,"length2":25},{"diffs":[[0,"    "],[-1,"control.millis()"],[1,"basic.showLeds(`"],[0,"\n   "]],"start1":449,"start2":449,"length1":24,"length2":24},{"diffs":[[0,"    "],[-1,"mode=STATE.running\n        let zavod=1\n        radio.sendValue(\"state\", zavod)\n      }\n}\nif(mode===STATE.running){\n    radio.onReceivedValue(function(name: string, value: number) {\n    })\nmode=STATE.finish\n}\nif(mode===STATE.finish){\n    "],[1,"# . . . #\n        . # . # .\n        . . # . .\n        . # . # .\n        # . . . #\n        `\n\n        ); }"],[0,"\n}"],[1,"\n"]],"start1":474,"start2":474,"length1":243,"length2":112}]}]},{"timestamp":1738573676852,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"um STATE"],[-1," "],[0,"{\n"],[1,""],[0,"    read"]],"start1":320,"start2":320,"length1":19,"length2":18},{"diffs":[[0,",\n}\n"],[-1,"avrglight = lightCalibrate()\n\n"],[0,"let "]],"start1":364,"start2":364,"length1":38,"length2":8},{"diffs":[[0,"ode:"],[-1," "],[0,"STATE"],[-1," = "],[1,"="],[0,"STAT"]],"start1":373,"start2":373,"length1":17,"length2":14},{"diffs":[[0,"ATE\n"],[-1,"let runtime:number\nbasic.forever(() => {\n    if "],[1,"if"],[0,"(mode"],[-1," "],[0,"==="],[-1," "],[0,"STAT"]],"start1":400,"start2":400,"length1":66,"length2":18},{"diffs":[[0,"E.ready)"],[-1," "],[0,"{\n"],[-1,"\n    "],[1,"    avrglight = lightCalibrate()\n"],[0,"    if ("]],"start1":418,"start2":418,"length1":24,"length2":51},{"diffs":[[0,"    "],[-1,"   runtime="],[0,"cont"]],"start1":510,"start2":510,"length1":19,"length2":8},{"diffs":[[0,"s()\n        "],[-1,"    "],[0,"mode"],[-1," = "],[1,"="],[0,"STATE.runnin"]],"start1":527,"start2":527,"length1":35,"length2":29},{"diffs":[[0,".running"],[-1," as STATE\n"],[1,"\n        let zavod=1\n        "],[0,"radio.se"]],"start1":549,"start2":549,"length1":26,"length2":45},{"diffs":[[0,"e\", "],[-1,"1"],[1,"zavod"],[0,")\n      "],[-1,"  }\n    }\n    "],[1,"}\n}\n"],[0,"if"],[-1," "],[0,"(mode"],[-1," "],[0,"==="],[-1," "],[0,"STAT"]],"start1":607,"start2":607,"length1":44,"length2":35},{"diffs":[[0,"ing)"],[-1," "],[0,"{\n    "],[-1,"    \n        mode = STATE.finish as STATE\n    }\n    if (mode === STATE.finish) {\n\n    }\n})\n\n"],[0,"radi"]],"start1":648,"start2":648,"length1":107,"length2":14},{"diffs":[[0,"function"],[-1," "],[0,"(name: s"]],"start1":680,"start2":680,"length1":17,"length2":16},{"diffs":[[0,") {\n"],[1,"    })\nmode=STATE.finish\n}\nif(mode===STATE.finish){\n    "],[0,"\n}"],[-1,")"]],"start1":716,"start2":716,"length1":7,"length2":62}]}]},{"timestamp":1738574423672,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nish) {\n"],[-1," ru"],[0,"\n    }\n}"]],"start1":794,"start2":794,"length1":19,"length2":16}]}]},{"timestamp":1738574428802,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   ready"],[-1," = 0"],[0,",\n    ru"]],"start1":332,"start2":332,"length1":20,"length2":16},{"diffs":[[0,"ning"],[-1," =1"],[0,",\n  "]],"start1":349,"start2":349,"length1":11,"length2":8},{"diffs":[[0,"nish"],[-1," =2"],[0,",\n}\n"]],"start1":361,"start2":361,"length1":11,"length2":8},{"diffs":[[0,"runtime:"],[-1," "],[0,"number\nb"]],"start1":442,"start2":442,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"switch (mode) {\n        case"],[1,"if (mode ==="],[0," STA"]],"start1":479,"start2":479,"length1":36,"length2":20},{"diffs":[[0,"TE.ready"],[-1,":\n   "],[1,") {\n\n"],[0,"        "],[-1," "],[0,"if (ligh"]],"start1":499,"start2":499,"length1":30,"length2":29},{"diffs":[[0,"\n           "],[-1,"     "],[0,"runtime"],[-1," = "],[1,"="],[0,"control.mill"]],"start1":560,"start2":560,"length1":39,"length2":32},{"diffs":[[0,"s()\n            "],[-1,"    "],[0,"mode = STATE.run"]],"start1":593,"start2":593,"length1":36,"length2":32},{"diffs":[[0,"ATE\n"],[-1,"                "],[0,"radi"]],"start1":635,"start2":635,"length1":24,"length2":8},{"diffs":[[0,"e\", "],[-1,"mode)\n    "],[1,"1)\n"],[0,"    "]],"start1":660,"start2":660,"length1":18,"length2":11},{"diffs":[[0,"    "],[-1,"  "],[-1,"      break;\n        case"],[1,"}\n    if (mode ==="],[0," STA"]],"start1":677,"start2":677,"length1":35,"length2":26},{"diffs":[[0,".running"],[-1,":\n"],[1,") {\n  "],[0,"      "],[1,"\n  "],[0,"      mo"]],"start1":705,"start2":705,"length1":24,"length2":31},{"diffs":[[0,"    "],[-1,"        break;\n        case STATE.finish:\n            runtime = control.millis() - runtime\n            radio.sendValue(\"time\", runtime)\n            break;"],[1,"}\n    if (mode === STATE.finish) {\n ru"],[0,"\n    }\n"],[-1,"\n"],[0,"})\n\n"]],"start1":763,"start2":763,"length1":170,"length2":53}]}]},{"timestamp":1738574921525,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[1,"mode = STATE.finish as STATE"],[0,"\n       "]],"start1":790,"start2":790,"length1":16,"length2":44}]}]},{"timestamp":1739779536105,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"id"],[0,"\n})"]],"start1":1028,"start2":1028,"length1":9,"length2":7}]}]},{"timestamp":1739779541235,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"me)\n"],[-1,"            basic.showNumber(runtime)\n            if(input.buttonIsPressed(Button.A)){\n                mode=STATE.ready\n            }\n"],[0,"    "]],"start1":935,"start2":935,"length1":142,"length2":8},{"diffs":[[0," {\ni"],[-1,"f(name===\"state\" && value===2){\n    mode=STATE.finish\n}"],[1,"d"],[0,"\n})"]],"start1":1029,"start2":1029,"length1":62,"length2":8}]}]},{"timestamp":1739780133368,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"radio.sendValue(\"state\", 0)\n                mode=STATE.ready\n                "],[1,"mode=STATE.ready"],[0,"\n   "]],"start1":1038,"start2":1038,"length1":85,"length2":24},{"diffs":[[0,"}\n})"],[-1,"\nradio.onReceivedValue(function (name: string, value: number) {\n    if (name === \"state\" && value === 0) {\n        mode = STATE.ready\n    }\n})"]],"start1":1221,"start2":1221,"length1":146,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":242,"start2":242,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// Tady jsou testy. Při použití tohoto balíčku jako rozšíření nebude zkompilováno.\n"}]}],"snapshots":[{"timestamp":1738570730955,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Pxt-wireless-transmiter\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1738574422954,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"\nradio.setGroup(37)\nradio.setTransmitPower(3)\nlet avrglight: number = 0\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\nenum STATE {\n    ready,\n    running,\n    finish,\n}\navrglight = lightCalibrate()\n\nlet mode: STATE = STATE.ready as STATE\nlet runtime:number\nbasic.forever(() => {\n    if (mode === STATE.ready) {\n\n        if (lightCalibrate() < avrglight - 20) {\n           runtime=control.millis()\n            mode = STATE.running as STATE\nradio.sendValue(\"state\", 1)\n        }\n    }\n    if (mode === STATE.running) {\n        \n        mode = STATE.finish as STATE\n    }\n    if (mode === STATE.finish) {\n\n    }\n})\n\nradio.onReceivedValue(function (name: string, value: number) {\n\n})","README.md":"","pxt.json":"{\n    \"name\": \"Pxt-wireless-transmiter\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1739779536105,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"\nradio.setGroup(37)\nradio.setTransmitPower(3)\nlet avrglight: number = 0\nconst lightCalibrate: () => number = () => {\n    let svetlo = input.lightLevel()\n    let prumer: number = 0\n    for (let i: number = 0; i < 10; i = i + 1) {\n        prumer += svetlo\n        basic.pause(20)\n    }\n    return prumer = prumer / 10\n}\nenum STATE {\n    ready = 0,\n    running =1,\n    finish =2,\n}\navrglight = lightCalibrate()\n\nlet mode: STATE = STATE.ready as STATE\nlet runtime: number\nbasic.forever(() => {\n    switch (mode) {\n        case STATE.ready:\n            if (lightCalibrate() < avrglight - 20) {\n                runtime = control.millis()\n                mode = STATE.running as STATE\n                radio.sendValue(\"state\", mode)\n            }\n            break;\n        case STATE.running:\n            mode = STATE.finish as STATE\n            break;\n        case STATE.finish:\n            runtime = control.millis() - runtime\n            radio.sendValue(\"time\", runtime)\n            break;\n    }\n\n})\n\nradio.onReceivedValue(function (name: string, value: number) {\n\n})","README.md":"","pxt.json":"{\n    \"name\": \"Pxt-wireless-transmiter\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1739780458143}